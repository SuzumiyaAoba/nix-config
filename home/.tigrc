#################################################
# View
#################################################

## main view 
set main-view = id date author:email-user commit-title:graph=yes,refs=yes
set main-view-date-local = true

## blame view
set blame-view = date:default author:email-user id:yes,color line-number:yes,interval=1 text
set blame-view-date-local = true

## pager
set pager-view = line-number:yes,interval=1 text

set stage-view = line-number:yes,interval=1 text

set log-view   = line-number:yes,interval=1 text

set blob-view  = line-number:yes,interval=1 text

set diff-view  = line-number:yes,interval=1 text:yes,commit-title-overflow=no

set blame-view-date-local = true

set tree-view-date-local = true

# 横分割
set vertical-split = no

# utf-8 で文字描画
set line-graphics = utf-8

# 空白無視(status-view では表示するが diff-view では無視する) (W でトグル)
set ignore-space = at-eol

# 検索時に大文字小文字の区別を無視する
set ignore-case = true

# マージ diff を表示する
set diff-options = -m --first-parent

# diff-highlight
set diff-highlight = true

# マウスを有効にする
set mouse = true

# '+行数' の形で Editor に行番号を引数として渡すか
set editor-line-number = yes

# リフレッシュするタイミング
set refresh-mode = auto

# Ctrl-g でリフレッシュ
bind generic <Ctrl-g> refresh

# カラー設定
color diff-header default magenta
color diff-chunk  black   white

#################################################
# Vim-like-style keybindings for Tig
#################################################

## Cursor
bind generic h scroll-left
bind generic j move-down
bind generic k move-up
bind generic l scroll-right

bind generic g  none
bind generic gg move-first-line
bind generic gj next
bind generic gk previous
bind generic gp parent
bind generic gP back
bind generic gn view-next

bind main    G move-last-line
bind generic G move-last-line

bind generic <C-f> move-page-down
bind generic <C-b> move-page-up

bind generic @  none
bind generic @j :/^@@
bind generic @k :?^@@
bind generic @- :toggle diff-context -1
bind generic @+ :toggle diff-context +1

## Commit

bind generic c  none
bind generic cc !git commit
bind generic ca !?@git commit --amend --no-edit

bind generic H view-help

bind generic F none
bind generic F !git fetch

## Push
bind status P !git push origin

## Reset
bind generic ^ ?git reset --soft HEAD^

## Diff
# . で HEAD との diff
bind main    . @sh -c "git diff %(commit) | tig"
bind diff    . @sh -c "git diff %(commit) | tig"
bind refs    . @sh -c "git diff %(branch) | tig"

# # Alt-. で指定 commit ID との diff
bind main    <Esc>. @sh -c "git diff %(commit)..%(prompt Enter commit ID: ) | tig"
bind diff    <Esc>. @sh -c "git diff %(commit)..%(prompt Enter commit ID: ) | tig"
bind refs    <Esc>. @sh -c "git diff %(branch)..%(prompt Enter branch name: ) | tig"

## Reflog
bind generic L @sh -c "git reflog --pretty=raw | tig --prettiy=raw"
bind generic _ ?@git reset --hard HEAD@{"%(prompt Enter HEAD@{} number: ")}

## Stash
bind generic S @git stash save "%(prompt Enter stash comment: )"
# bind diff Y @git stash pop %(stash)
bind stash Y      ?@git stash pop %(stash)
bind stash <Esc>y ?@git stash apply %(stash)
bind stash D      ?@git stash drop %(stash)

## Branch
bind refs D      ?@git branch -d %(branch)
bind main B       @git checkout -b "%(prompt Enter branch name: )" %(branch)
bind refs B       @git checkout -b "%(prompt Enter branch name: )" %(branch)
bind main <Esc>b  @git checkout -b "%(prompt Enter branch name: )" %(commit)
bind generic -    @git checkout -

## Merge
bind main M      ?git merge %(branch)
bind diff M      ?git merge %(branch)
bind refs M      ?git merge %(branch)
bind main <Esc>m ?git merge %(commit)
bind diff <Esc>m ?git merge %(commit)

## Rebase
bind main R      ?@git rebase %(branch)
bind diff R      ?@git rebase %(branch)
bind refs R      ?@git rebase %(branch)
bind main <Esc>r ?@git rebase %(commit)
bind diff <Esc>r ?@git rebase %(commit)

## Rebase -i
bind main I      ?git rebase -i %(branch)
bind diff I      ?git rebase -i %(branch)
bind refs I      ?git rebase -i %(branch)
bind main <Esc>i ?git rebase -i %(commit)
bind diff <Esc>i ?git rebase -i %(commit)

## Tag
bind main T @git tag "%(prompt Enter tag name: )" %(commit)
bind refs T @git tag "%(prompt Enter tag name: )" %(branch)

## Chery-pick
bind main K @git cherry-pick %(commit)
bind diff K @git cherry-pick %(commit)

# cherry-pick -n
bind main <Esc>k @git cherry-pick -n %(commit)
bind diff <Esc>k @git cherry-pick -n %(commit)
